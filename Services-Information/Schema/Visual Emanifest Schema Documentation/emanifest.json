{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"description": "Schema for emanifest submit and response. v1.2",
	"$ref": "#/definitions/Emanifest",
	"definitions": {
		"Emanifest": {
			"description": "Object that contians all manifest data",
			"type": "object",
			"properties": {
				"createdDate": {
					"description": "Will be returned by Get Manifest. Shall not be provided for Save and Update Manifest.  Example: 2018-01-22T05:07:00.00Z",
					"type": "string",
					"format": "date-time"
				},
				"updatedDate": {
					"description": "Will be returned by Get Manifest. Shall not be provided for Save and Update Manifest.  Example: 2018-01-22T05:07:00.00Z",
					"type": "string",
					"format": "date-time"
				},
				"manifestTrackingNumber": {
					"$ref": "#/definitions/ManifestTrackingNumber"
				},
				"status": {
					"description": " Will be returned by Get Manifest. Status shall not be provided for Save Manifest Service.  The status is assigned by the submissionType.  status is required for the Update Service.  ",
					"type": "string",
					"enum": [
						"NotSelected",
						"Pending",
						"Scheduled",
						"InTransit",
						"Received",
						"ReadyForSignature",
						"Signed"
					]
				},
				"isPublic": {
					"description": "Will be returned by Get Manifest. Shall not be provided by Save and Update Manifest",
					"type": "boolean"
				},
				"submissionType": {
					"description": "Only FullElectronic and DataImage5Copy submission types are supported for the current Release",
					"type": "string",
					"enum": [
						"FullElectronic",
						"DataImage1Copy",
						"DataImage5Copy",
						"Hybrid",
						"Image"
					]
				},
				"signatureStatus": {
					"description": "Will be returned by Get Manifest. Shall not be provided by Save and Update Manifest",
					"type": "boolean"
				},
				"originType": {
					"description": "Will be returned by Get Manifest. Shall not be provided for Save and Update Manifest. ",
					"type": "string",
					"enum": [
						"Web",
						"Service",
						"Mail"
					]
				},
				"shippedDate": {
					"description": "Will be returned by Get Manifest. Shall not be provided for Save and Update Manifest.",
					"type": "string",
					"format": "date-time"
				},
				"receivedDate": {
					"description": "Will be returned by Get Manifest. Shall not be provided for Save and Update Manifest.",
					"type": "string",
					"format": "date-time"
				},
				"certifiedDate": {
					"description": "Will be returned by Get Manifest. Shall not be provided for Save and Update Manifest.",
					"type": "string",
					"format": "date-time"
				},
				"certifiedBy": {
					"description": "Will be returned by Get Manifest. Shall not be provided for Save and Update Manifest.",
					"$ref": "#/definitions/Signer"
				},
				"generator": {
					"$ref": "#/definitions/ManifestHandlerSite"
				},
				"transporters": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ManifestHandlerSite"
					}
				},
				"designatedFacility": {
					"$ref": "#/definitions/ManifestHandlerSite"
				},
				"wastes": {
					"description": "Object containing all the wastes for a manifest",
					"type": "array",
					"items": {
						"$ref": "#/definitions/Waste"
					}
				},
				"rejection": {
					"type": "boolean"
				},
				"rejectionInfo": {
					"type": "object",
					"properties": {
						"transporterOnSite": {
							"type": "boolean"
						},
						"rejectionType": {
							"type": "string",
							"enum": [
								"FullReject",
								"PartialReject"
							]
						},
						"alternateDesignatedFacilityType": {
							"type": "string",
							"enum": [
								"Generator",
								"Tsdf"
							]
						},
						"generatorPaperSignature": {
							"$ref": "#/definitions/PaperSignature"
						},
						"generatorElectronicSignature": {
							"$ref": "#/definitions/ElectronicSignature"
						},
						"alternateDesignatedFacility": {
							"$ref": "#/definitions/ManifestHandlerSite"
						},
						"newManifestTrackingNumbers": {
							"description": "Expected format: 9 digits followed by suffix containing 3 upper case letters. Use printed-tracking-number-suffixes service to obtain the list of valide suffixes.  Regex expression validation: [0-9]{9}[A-Z]{3}",
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"rejectionComments": {
							"type": "string",
							"minLength": 1,
							"maxLength": 255
						}
					},
					"additionalProperties": false,
					"residueNewManifestTrackingNumbers": {
						"description": "Expected format: 9 digits followed by suffix containing 3 upper case letters. Use printed-tracking-number-suffixes service to obtain the list of valide suffixes.  Regex expression validation: [0-9]{9}[A-Z]{3}",
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				"discrepancy": {
					"type": "boolean"
				},
				"residue": {
					"type": "boolean"
				},
				"import": {
					"type": "boolean"
				},
				"ImportInfo": {
					"type": "object",
					"properties": {
						"importGenerator": {
							"description": "The generator of the waste in the foreign country",
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"address": {
									"type": "string"
								},
								"city": {
									"type": "string"
								},
								"country": {
									"$ref": "#/definitions/Locality"
								},
								"province": {
									"type": "string"
								}
							},
							"additionalProperties": false
						},
						"importPortInfo": {
							"description": "City and State of port of entry",
							"type": "object",
							"properties": {
								"city": {
									"type": "string"
								},
								"state": {
									"$ref": "#/definitions/Locality"
								}
							},
							"additionalProperties": false
						}
					},
					"additionalProperties": false
				},
				"containsPreviousRejectOrResidue": {
					"description": "If the manifest is created for shiping the waste to another TSDF or back to the Generator for rejection or residure reasons then containsPreviousRejectOrResidue=true otherwise it is false",
					"type": "boolean"
				},
				"printedDocument": {
					"$ref": "#/definitions/Document"
				},
				"formDocument": {
					"$ref": "#/definitions/Document"
				},
				"additionalInfo": {
					"$ref": "#/definitions/AdditionalInfo"
				}
			},
			"additionalProperties": false
		},
		"Warning": {
			"description": "Object that returns any warnings that the system generates",
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"message": {
					"type": "string",
					"minLength": 0,
					"maxLength": 255
				}
			},
			"required": [
				"code",
				"message"
			],
			"additionalProperties": false
		},
		"ManifestTrackingNumber": {
			"description": "Will be returned by Get Manifest. Shall not be provided for Save Manifest. Expected format: 9 digits followed by suffix containing 3 upper case letters. Use printed-tracking-number-suffixes service to obtain the list of valide suffixes.  Regex expression validation: [0-9]{9}[A-Z]{3}",
			"type": "string"
		},
		"ProperShippingName": {
			"description": "ProperShippingName",
			"type": "string",
			"maxLength": 255
		},
		"IdNumber": {
			"description": "UN or NA ID number ",
			"type": "string",
			"minLength": 6,
			"maxLength": 6,
			"pattern": "^(UN|NA)[0-9]{4}"
		},
		"PackingGroup": {
			"description": "Packing Group",
			"type": "string",
			"minLength": 1,
			"maxLength": 3,
			"pattern": "^I{1,3}$"
		},
		"DotInformation": {
			"description": "Object containing all DOT information",
			"type": "object",
			"properties": {
				"properShippingName": {
					"$ref": "#/definitions/ProperShippingName"
				},
				"psnComment": {
					"description": "max lengs: 255",
					"type": "string"
				},
				"rqIndicator": {
					"type": "boolean"
				},
				"rqDescription": {
					"description": "Max length: 105 characters",
					"type": "string"
				},
				"technicalName": {
					"description": "Max length: 75 characters",
					"type": "string"
				},
				"idNumber": {
					"$ref": "#/definitions/Code"
				},
				"packingGroup": {
					"$ref": "#/definitions/Code"
				},
				"hazardClass": {
					"$ref": "#/definitions/Code"
				},
				"printedDotInformation": {
					"description": "Contains Proper Shipping Name, RQ Description, Technical Name, ID Number, Hazard Class, Packing Group and any user edits",
					"type": "string",
					"maxLength": 500
				},
				"emergencyGuideNumber": {
					"$ref": "#/definitions/Code"
				}
			},
			"required": [
				"properShippingName",
				"idNumber",
				"printedDotInformation"
			],
			"additionalProperties": false
		},
		"QuantityUnitsOfMeasurement": {
			"description": "Units of Measurement for the waste line",
			"type": "object",
			"properties": {
				"code": {
					"type": "string",
					"minLength": 1,
					"maxLength": 1,
					"enum": [
						"P",
						"T",
						"K",
						"M",
						"G",
						"L",
						"Y",
						"N"
					]
				},
				"description": {
					"type": "string",
					"enum": [
						"Pounds",
						"Tons (2000 Pounds)",
						"Kilograms",
						"Metric Tons (1000 Kilograms)",
						"Gallons",
						"Liters",
						"Cubic Yards",
						"Cubic Meters"
					]
				}
			},
			"required": [
				"code"
			],
			"additionalProperties": false
		},
		"ContainerType": {
			"description": "Type of container for waste line",
			"type": "object",
			"properties": {
				"code": {
					"type": "string",
					"minLength": 2,
					"maxLength": 2,
					"enum": [
						"BA",
						"DT",
						"CF",
						"DW",
						"CM",
						"HG",
						"CW",
						"TC",
						"CY",
						"TP",
						"DF",
						"TT",
						"DM"
					]
				},
				"description": {
					"type": "string",
					"enum": [
						"Burlap, cloth, paper, or plastic bags",
						"Dump truck",
						"Fiber or plastic boxes, cartons, cases",
						"Wooden drums, barrels, kegs",
						"Metal boxes, cartons, cases (including roll offs)",
						"Hopper or gondola cars",
						"Wooden boxes, cartons, cases",
						"Tank cars",
						"Cylinders",
						"Portable tanks",
						"Fiberboard or plastic drums, barrels, kegs",
						"Cargo tanks (tank trucks)",
						"Metal drums, barrels, kegs"
					]
				}
			},
			"required": [
				"code"
			],
			"additionalProperties": false
		},
		"DensityUnitsOfMeasurement": {
			"description": "Density Units",
			"type": "object",
			"properties": {
				"code": {
					"type": "string",
					"minLength": 1,
					"maxLength": 1,
					"enum": [
						"1",
						"2"
					]
				},
				"description": {
					"type": "string",
					"enum": [
						"lbs/gal",
						"sg"
					]
				}
			},
			"required": [
				"code"
			],
			"additionalProperties": false
		},
		"Waste": {
			"description": "Object containing the each waste line",
			"type": "object",
			"properties": {
				"hazardous": {
					"description": "If hazardous is true then dotInformation is required. If hazardous is false then wasteDescription is required",
					"type": "boolean"
				},
				"dotInformation": {
					"$ref": "#/definitions/DotInformation"
				},
				"wasteDescription": {
					"description": "Max length: 500 charachters",
					"type": "string"
				},
				"quantity": {
					"$ref": "#/definitions/Quantity"
				},
				"br": {
					"$ref": "#/definitions/Br"
				},
				"brInfo": {
					"description": "Specifies if BR information is provided",
					"type": "boolean"
				},
				"hazardousWaste": {
					"$ref": "#/definitions/HazardousWaste"
				},
				"pcb": {
					"type": "boolean"
				},
				"pcbInfo": {
					"description": "Object containing PCB information",
					"type": "object",
					"properties": {
						"loadType": {
							"$ref": "#/definitions/Code"
						},
						"articleContainerId": {
							"description": "Max Length: 255",
							"type": "string"
						},
						"dateOfRemoval": {
							"type": "string",
							"format": "date-time"
						},
						"weight": {
							"description": "UOM are Killograms. Decimal number containing no more than 11 whole digit(s) and 6 decimal digit(s) ",
							"type": "number"
						},
						"wasteType": {
							"description": "Max Length: 255",
							"type": "string"
						},
						"bulkIdentity": {
							"description": "Max Length: 255",
							"type": "string"
						}
					},
					"additionalProperties": false
				},
				"discrepancyResidueInfo": {
					"description": "Object containing the discrepancy residue information for the waste line",
					"type": "object",
					"properties": {
						"wasteQuantity": {
							"type": "boolean"
						},
						"wasteType": {
							"type": "boolean"
						},
						"discrepancyComments": {
							"type": "string",
							"minLength": 1,
							"maxLength": 255
						},
						"residue": {
							"type": "boolean"
						},
						"residueComments": {
							"type": "string",
							"minLength": 1,
							"maxLength": 255
						}
					},
					"additionalProperties": false
				},
				"managementMethod": {
					"$ref": "#/definitions/CodeDescription"
				},
				"additionalInfo": {
					"$ref": "#/definitions/AdditionalInfo"
				},
				"lineNumber": {
					"description": "Integer number starting at 1",
					"type": "number"
				},
				"waste": {
					"description": "Specifies if it is waste",
					"type": "boolean"
				}
			},
			"required": [
				"hazardous",
				"lineNumber"
			],
			"additionalProperties": false
		},
		"Br": {
			"description": "Entity containing Biennial Report Fields",
			"type": "object",
			"properties": {
				"density": {
					"type": "number",
					"minimum": 0,
					"exclusiveMinimum": true,
					"maximum": 999.99
				},
				"densityUnitOfMeasurement": {
					"$ref": "#/definitions/DensityUnitsOfMeasurement"
				},
				"formCode": {
					"$ref": "#/definitions/CodeDescription"
				},
				"sourceCode": {
					"$ref": "#/definitions/CodeDescription"
				}
			},
			"dependencies": {
				"density": [
					"densityUnitOfMeasurement"
				]
			},
			"additionalProperties": false
		},
		"Quantity": {
			"description": "Object containing the Number of containers, type of container, the total quantity and total qunatity units of measurement",
			"type": "object",
			"properties": {
				"containerNumber": {
					"type": "number",
					"maximum": 999
				},
				"containerType": {
					"$ref": "#/definitions/ContainerType"
				},
				"quantity": {
					"type": "number",
					"minimum": 0,
					"exclusiveMinimum": true,
					"maximum": 99999999999.999999
				},
				"unitOfMeasurement": {
					"$ref": "#/definitions/QuantityUnitsOfMeasurement"
				}
			},
			"dependencies": {
				"quantity": [
					"unitOfMeasurement"
				]
			},
			"additionalProperties": false
		},
		"HazardousWaste": {
			"description": "Object containing federal and state waste codes",
			"type": "object",
			"properties": {
				"federalWasteCodes": {
					"description": "Entity containing Federally Defined Waste Codes",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CodeDescription"
					}
				},
				"tsdfStateWasteCodes": {
					"description": "Entity containing Waste Codes for the State where the TSDF is located",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CodeDescription"
					}
				},
				"tsdfTxWasteCodes": {
					"description": "Entity containing Waste Codes if TSDF is located in TX",
					"type": "array",
					"items": {
						"type": "string",
						"minLength": 8,
						"maxLength": 8
					}
				},
				"generatorStateWasteCodes": {
					"description": "Entity containing Waste Codes for the State where the Generator is located",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CodeDescription"
					}
				},
				"generatorTxWasteCodes": {
					"description": "Entity containing Waste Codes if Generator is loccated in TX",
					"type": "array",
					"items": {
						"type": "string",
						"minLength": 8,
						"maxLength": 8
					}
				},
				"managementMethod": {
					"$ref": "#/definitions/CodeDescription"
				}
			},
			"additionalProperties": false
		},
		"AdditionalInfo": {
			"description": "Entity containing Additional Information. Both Manifest and individual Wastes can contain this entitiy",
			"type": "object",
			"properties": {
				"originalManifestTrackingNumbers": {
					"description": "Used only for the Manifest additionalInfo if Eanifest.containsPreviousRejectOrResidue== true  Expected format: 9 digits followed by suffix containing 3 upper case letters. Use printed-tracking-number-suffixes service to obtain the list of valide suffixes.  Regex expression validation: [0-9]{9}[A-Z]{3}",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"consentNumber": {
					"description": "Used only for the WasteadditionalInfo in case of Import.",
					"type": "string",
					"maxLength": 12,
					"pattern": "[0-9]{6}I[0-9]{5}"
				},
				"comments": {
					"description": "Entity defined reference information",
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"label": {
								"description": "Label describing the reference information ",
								"type": "string",
								"maxLength": 255
							},
							"description": {
								"description": "Data for the reference information descrbied by the label.",
								"type": "string",
								"maxLength": 4000
							},
							"handlerId": {
								"description": "Handler ID of site related to this reference information",
								"type": "string",
								"pattern": "^([A-Z][A-Z][A-Za-z0-9]{2,10})$"
							}
						},
						"additionalProperties": false
					}
				},
				"handlingInstructions": {
					"description": "Special Handling Instructions",
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"ManifestHandlerSite": {
			"description": "Object contianing site information",
			"type": "object",
			"properties": {
				"siteType": {
					"$ref": "#/definitions/SiteType"
				},
				"epaSiteId": {
					"$ref": "#/definitions/EpaSiteId"
				},
				"name": {
					"type": "string",
					"maxLength": 80
				},
				"mailingAddress": {
					"$ref": "#/definitions/Address"
				},
				"siteAddress": {
					"$ref": "#/definitions/Address"
				},
				"contact": {
					"$ref": "#/definitions/Contact"
				},
				"emergencyPhone": {
					"$ref": "#/definitions/Phone"
				},
				"paperSignatureInfo": {
					"$ref": "#/definitions/PaperSignature"
				},
				"electronicSignatureInfo": {
					"$ref": "#/definitions/ElectronicSignature"
				},
				"order": {
					"description": "Transporter Order. Used for Transporters only",
					"type": "number"
				},
				"registered": {
					"description": "Indicates if the site is registered in RCRAInfo. Used for Transporters and Generators only.",
					"type": "boolean"
				},
				"modified": {
					"description": "Indicates if the site information was modified from what was on the handler’s notification form",
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"PaperSignature": {
			"description": "Contains  printed name of the Generator or TSDF or Transporter Signee and Date of Signature",
			"type": "object",
			"properties": {
				"printedName": {
					"type": "string",
					"maxLength": 255
				},
				"signatureDate": {
					"type": "string",
					"format": "date-time"
				}
			},
			"additionalProperties": false
		},
		"ElectronicSignature": {
			"description": "Contains Generator or TSDF or Transporter Signer Info, Date of Signature and Signed document metadata",
			"type": "object",
			"properties": {
				"signer": {
					"$ref": "#/definitions/Signer"
				},
				"signatureDate": {
					"type": "string",
					"format": "date-time"
				},
				"humanReadableDocument": {
					"$ref": "#/definitions/Document"
				},
				"cromerrActivityId": {
					"type": "string"
				},
				"cromerrDocumentId": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"SiteType": {
			"description": "How a site interacts with this manifest",
			"type": "string",
			"enum": [
				"Tsdf",
				"Generator",
				"Transporter"
			]
		},
		"CompanyName": {
			"description": "The name for each site on the manifest",
			"type": "string",
			"maxLength": 80
		},
		"EpaSiteId": {
			"description": "The handler ID for each site on the manifest",
			"type": "string",
			"pattern": "^([A-Z][A-Z][A-Za-z0-9]{2,10})$"
		},
		"Phone": {
			"description": "Object for Phone numbers",
			"type": "object",
			"properties": {
				"number": {
					"description": "Following format pattern shall be used:  ###-###-####",
					"type": "string",
					"minLength": 12,
					"maxLength": 12
				},
				"extension": {
					"type": "string",
					"maxLength": 6
				}
			},
			"required": [
				"number"
			],
			"additionalProperties": false
		},
		"Contact": {
			"description": "Object containing the information about the site contact for this manifest",
			"type": "object",
			"properties": {
				"firstName": {
					"type": "string",
					"minLength": 1,
					"maxLength": 38
				},
				"middleInitial": {
					"type": "string",
					"minLength": 1,
					"maxLength": 1
				},
				"lastName": {
					"type": "string",
					"minLength": 1,
					"maxLength": 38
				},
				"phone": {
					"$ref": "#/definitions/Phone"
				},
				"email": {
					"type": "string"
				},
				"companyName": {
					"$ref": "#/definitions/CompanyName"
				}
			},
			"additionalProperties": false
		},
		"Locality": {
			"description": "Used for passing and returning State and Country",
			"type": "object",
			"properties": {
				"code": {
					"type": "string",
					"minLength": 2,
					"maxLength": 2
				},
				"name": {
					"type": "string",
					"minLength": 1,
					"maxLength": 100
				}
			},
			"required": [
				"code"
			],
			"additionalProperties": false
		},
		"Address": {
			"description": "Object for Address information for handlers on this manifest",
			"type": "object",
			"properties": {
				"streetNumber": {
					"type": "string",
					"maxLength": 12
				},
				"address1": {
					"type": "string",
					"maxLength": 50
				},
				"address2": {
					"type": "string",
					"maxLength": 50
				},
				"city": {
					"type": "string",
					"maxLength": 25
				},
				"state": {
					"$ref": "#/definitions/Locality"
				},
				"country": {
					"$ref": "#/definitions/Locality"
				},
				"zip": {
					"type": "string",
					"pattern": "\\d{5}(?:[-\\s]\\d{4})?"
				}
			},
			"required": [
				"address1",
				"city",
				"state",
				"zip"
			],
			"additionalProperties": false
		},
		"Signer": {
			"description": "Contains Signer Information",
			"type": "object",
			"properties": {
				"firstName": {
					"type": "string",
					"minLength": 1,
					"maxLength": 38
				},
				"lastName": {
					"type": "string",
					"minLength": 1,
					"maxLength": 38
				},
				"userId": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"Document": {
			"description": "Attachments metadata formDocument is the PDF generated by EPA.  printedDocument is the file uploaded to EPA",
			"type": "object",
			"properties": {
				"name": {
					"description": "file name of PDF",
					"type": "string",
					"pattern": "^[0-9a-zA-Z_\\-. ]+$"
				},
				"size": {
					"description": "Size of file, optional for upload",
					"type": "number"
				},
				"mimeType": {
					"type": "string",
					"enum": [
						"APPLICATION_PDF",
						"TEXT_HTML"
					]
				}
			},
			"additionalProperties": false
		},
		"CodeDescription": {
			"description": "Object for handling codes and their descriptions.  This object will have a parent object that will describe the code.  ",
			"type": "object",
			"properties": {
				"code": {
					"description": "Code coresponding to the parent element.  For example, if the parent element is managementMethod then an example value for code would be H010",
					"type": "string"
				},
				"description": {
					"description": "Optional field this discription is returned based on the code provided in this object.  For example if code is H010 then the description returned is METALS RECOVERY",
					"type": "string"
				}
			},
			"required": [
				"code"
			],
			"additionalProperties": false
		},
		"ProperShippingName": {
			"description": "Object for DOT Proper Shipping name",
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"technicalNameIndicator": {
					"type": "boolean"
				}
			},
			"required": [
				"code"
			],
			"additionalProperties": false
		},
		"Code": {
			"description": "Code is used for certain fields that are independent of their description such as Hazard Class",
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				}
			},
			"required": [
				"code"
			],
			"additionalProperties": false
		}
	}
}