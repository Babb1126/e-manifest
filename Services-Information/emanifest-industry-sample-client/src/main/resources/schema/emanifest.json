{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"description": "Schema for manifest response",
	"$ref": "#/definitions/Emanifest",
	"definitions": {
		"Emanifest": {
			"type": "object",
			"properties": {
				"createdDate": {
					"type": "string",
					"format": "date-time"
				},
				"updatedDate": {
					"type": "string",
					"format": "date-time"
				},
				"manifestTrackingNumber": {
					"$ref": "#/definitions/ManifestTrackingNumber"
				},
				"status": {
					"description": "Emanifest Submission Status",
					"type": "string",
					"enum": [
						"Pending",
						"Scheduled",
						"InTransit",
						"Received",
						"Rejected",
						"ReadyForSignature",
						"Signed"
					]
				},
				"validationStatus": {
					"description": "Specifies if Manifest is valid",
					"type": "boolean"
				},
				"isPublic": {
					"type": "boolean"
				},
				"submissionType": {
					"description": "Only DataImage1Copy submission type is supported for June Release",
					"type": "string",
					"enum": [
						"Data",
						"Image",
						"DataImage1Copy",
						"DataImage6Copy",
						"Hybrid"
					]
				},
				"signatureStatus": {
					"type": "boolean"
				},
				"originType": {
					"description": "Describes the the origin of Manifest. Which can be received either electronicaly via Web Submission or electronicaly via SErvices Submission or via Mail by Paper Processing Center. Web and Service are orgin types which are supported for June Release",
					"type": "string",
					"enum": [
						"Web",
						"Service",
						"Mail"
					]
				},
				"shippedDate": {
					"type": "string",
					"format": "date-time"
				},
				"receivedDate": {
					"type": "string",
					"format": "date-time"
				},
				"certifiedDate": {
					"type": "string",
					"format": "date-time"
				},
				"certifiedBy": {
					"type": "string"
				},
				"generator": {
					"$ref": "#/definitions/ManifestHandlerSite"
				},
				"transporters": {
					"title": "trasporters",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ManifestHandlerSite"
					}
				},
				"designatedFacility": {
					"$ref": "#/definitions/ManifestHandlerSite"
				},
				"wastes": {
					"title": "wastes",
					"type": "array",
					"items": {
						"$ref": "#/definitions/Waste"
					}
				},
				"discrepancyInfo": {
					"$ref": "#/definitions/Discrepancy"
				},
				"additionalInfo": {
					"$ref": "#/definitions/AdditionalInfo"
				}
			},
			"required": [
				"createdDate",
				"status",
				"submissionType",
				"generator",
				"designatedFacility"
			],
			"additionalProperties": false
		},
		"Warning": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"message": {
					"type": "string",
					"minLength": 0,
					"maxLength": 255
				}
			},
			"required": [
				"code",
				"message"
			],
			"additionalProperties": false
		},
		"ManifestTrackingNumber": {
			"type": "string",
			"pattern": "[0-9]{9}[A-Z]{3}"
		},
		"ProperShippingName": {
			"type": "string",
			"minLength": 1,
			"maxLength": 300
		},
		"IdNumber": {
			"type": "string",
			"minLength": 6,
			"maxLength": 6,
			"pattern": "^(UN|NA)[0-9]{4}"
		},
		"PackingGroup": {
			"type": "string",
			"minLength": 1,
			"maxLength": 3,
			"pattern": "^I{1,3}$"
		},
		"DotInformation": {
			"title": "dotInformation",
			"type": "object",
			"properties": {
				"properShippingName": {
					"$ref": "#/definitions/Code"
				},
				"idNumber": {
					"$ref": "#/definitions/Code"
				},
				"packingGroup": {
					"$ref": "#/definitions/Code"
				},
				"hazardClass": {
					"$ref": "#/definitions/Code"
				},
				"printedDotInformation": {
					"description": "Contains Proper Shipping Name, ID Number, Hazard Class, Packing Group",
					"type": "string",
					"maxLength": 500
				},
				"emergencyPhone": {
					"$ref": "#/definitions/Phone"
				},
				"emergencyGuideNumber": {
					"$ref": "#/definitions/Code"
				}
			},
			"required": [
				"properShippingName",
				"idNumber",
				"hazardClass"
			],
			"additionalProperties": false
		},
		"WasteDescription": {
			"title": "wasteDescription",
			"type": "object",
			"properties": {
				"wasteDescription": {
					"type": "string",
					"maxLength": 500
				},
				"emergencyPhone": {
					"$ref": "#/definitions/Phone"
				}
			},
			"required": [
				"wasteDescription"
			],
			"additionalProperties": false
		},
		"QuantityUnitsOfMeasurement": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string",
					"minLength": 1,
					"maxLength": 1,
					"enum": [
						"P",
						"T",
						"K",
						"M",
						"G",
						"L",
						"Y",
						"N"
					]
				},
				"description": {
					"type": "string",
					"enum": [
						"Pounds",
						"Tons (2000 Pounds)",
						"Kilograms",
						"Metric Tons (1000 Kilograms)",
						"Gallons",
						"Liters",
						"Cubic Yards",
						"Cubic Meters"
					]
				}
			},
			"required": [
				"code"
			],
			"additionalProperties": false
		},
		"ContainerType": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string",
					"minLength": 2,
					"maxLength": 2,
					"enum": [
						"BA",
						"DT",
						"CF",
						"DW",
						"CM",
						"HG",
						"CW",
						"TC",
						"CY",
						"TP",
						"DF",
						"TT",
						"DM"
					]
				},
				"description": {
					"type": "string",
					"enum": [
						"Burlap, cloth, paper, or plastic bags",
						"Dump truck",
						"Fiber or plastic boxes, cartons, cases",
						"Wooden drums, barrels, kegs",
						"Metal boxes, cartons, cases (including roll offs)",
						"Hopper or gondola cars",
						"Wooden boxes, cartons, cases",
						"Tank cars",
						"Cylinders",
						"Portable tanks",
						"Fiberboard or plastic drums, barrels, kegs",
						"Cargo tanks (tank trucks)",
						"Metal drums, barrels, kegs"
					]
				}
			},
			"required": [
				"code"
			],
			"additionalProperties": false
		},
		"DensityUnitsOfMeasurement": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string",
					"minLength": 1,
					"maxLength": 1,
					"enum": [
						"1",
						"2"
					]
				},
				"description": {
					"type": "string",
					"enum": [
						"lbs/gal",
						"sg"
					]
				}
			},
			"required": [
				"code"
			],
			"additionalProperties": false
		},
		"Br": {
			"title": "br",
			"description": "Entity containing Biennial Report Fields",
			"type": "object",
			"properties": {
				"density": {
					"type": "number",
					"minimum": 0,
					"exclusiveMinimum": true,
					"maximum": 999.99
				},
				"densityUnitOfMeasurement": {
					"$ref": "#/definitions/DensityUnitsOfMeasurement"
				},
				"formCode": {
					"$ref": "#/definitions/CodeDescription"
				},
				"sourceCode": {
					"$ref": "#/definitions/CodeDescription"
				}
			},
			"dependencies": {
				"density": [
					"densityUnitOfMeasurement"
				]
			},
			"additionalProperties": false
		},
		"Quantity": {
			"title": "quantity",
			"type": "object",
			"properties": {
				"containerNumber": {
					"type": "number"
				},
				"containerType": {
					"$ref": "#/definitions/ContainerType"
				},
				"quantity": {
					"type": "number",
					"minimum": 0,
					"exclusiveMinimum": true,
					"maximum": 99999999999.999999
				},
				"unitOfMeasurement": {
					"$ref": "#/definitions/QuantityUnitsOfMeasurement"
				},
				"br": {
					"$ref": "#/definitions/Br"
				}
			},
			"dependencies": {
				"quantity": [
					"unitOfMeasurement"
				]
			},
			"additionalProperties": false
		},
		"HazardousWaste": {
			"title": "hazardousWaste",
			"type": "object",
			"properties": {
				"federalWasteCodes": {
					"description": "Entity containing Federally Defined Waste Codes",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CodeDescription"
					}
				},
				"tsdfStateWasteCodes": {
					"description": "Entity containing Waste Codes for the State where the TSDF is located",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CodeDescription"
					}
				},
				"generatorStateWasteCodes": {
					"description": "Entity containing Waste Codes for the State where the Generator is located",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CodeDescription"
					}
				},
				"managementMethod": {
					"$ref": "#/definitions/CodeDescription"
				}
			},
			"additionalProperties": false
		},
		"AdditionalInfo": {
			"title": "additionalInfo",
			"description": "Entity containing Additional Information. Both Manifest and individual Wastes can contain this entitiy",
			"type": "object",
			"properties": {
				"originalManifestTrackingNumber": {
					"type": "string",
					"pattern": "[0-9]{9}[A-Z]{3}"
				},
				"consentNumber": {
					"description": "Used only for the Waste in case of Import. Not supported for June release ",
					"type": "string",
					"maxLength": 12,
					"pattern": "[0-9]{6}I[0-9]{5}"
				},
				"comments": {
					"title": "comments",
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"label": {
								"type": "string",
								"maxLength": 255
							},
							"description": {
								"type": "string",
								"maxLength": 4000
							},
							"handlerId": {
								"type": "string",
								"pattern": "[A-Z]{2}[A-Z0-9]{2,10}"
							}
						},
						"required": [
							"label",
							"description",
							"handlerId"
						],
						"additionalProperties": false
					}
				},
				"handlingInstructions": {
					"type": "string",
					"maxLength": 4000
				}
			},
			"additionalProperties": false
		},
		"Waste": {
			"type": "object",
			"properties": {
				"hazardous": {
					"type": "boolean"
				},
				"dotInformation": {
					"$ref": "#/definitions/DotInformation"
				},
				"wasteDescription": {
					"$ref": "#/definitions/WasteDescription"
				},
				"consentNumber": {
					"type": "string",
					"maxLength": 12
				},
				"quantity": {
					"$ref": "#/definitions/Quantity"
				},
				"hazardousWaste": {
					"$ref": "#/definitions/HazardousWaste"
				},
				"additionalInfo": {
					"$ref": "#/definitions/AdditionalInfo"
				},
				"lineNumber": {
					"type": "number"
				}
			},
			"required": [
				"hazardous",
				"lineNumber"
			],
			"additionalProperties": false
		},
		"Discrepancy": {
			"title": "discrepancyInfo",
			"description": "Not implemented for June Release",
			"type": "object",
			"properties": {
				"quantity": {
					"type": "boolean"
				},
				"wasteType": {
					"type": "boolean"
				},
				"residue": {
					"type": "boolean"
				},
				"partialRejection": {
					"type": "boolean"
				},
				"newManifestTrackingNumbers": {
					"title": "newManifestTrackingNumbers",
					"type": "array",
					"items": {
						"type": "string",
						"pattern": "[0-9]{9}[A-Z]{3}"
					}
				},
				"alternateFacilityId": {
					"type": "string",
					"pattern": "[A-Z]{2}[A-Z0-9]{2,10}"
				},
				"rejectionComments": {
					"type": "string",
					"maxLength": 4000
				}
			},
			"required": [
				"partialRejection"
			],
			"additionalProperties": false
		},
	"ManifestHandlerSite": {
			"type": "object",
			"properties": {
				"siteType": {
					"$ref": "#/definitions/SiteType"
				},
				"epaSiteId": {
					"$ref": "#/definitions/EpaSiteId"
				},
				"name": {
					"type": "string",
					"maxLength": 80
				},
				"mailingAddress": {
					"$ref": "#/definitions/Address"
				},
				"siteAddress": {
					"$ref": "#/definitions/Address"
				},
				"contact": {
					"$ref": "#/definitions/Contact"
				},
				"emergencyPhone": {
					"$ref": "#/definitions/Phone"
				},
				"paperSignatureInfo": {
					"title": "paperSignatureInfo",
					"description": "Contains  printed name of the Generator or TSDF or Transporter Signee and Date of Signature",
					"type": "object",
					"properties": {
						"printedName": {
							"type": "string",
							"maxLength": 255
						},
						"signatureDate": {
							"type": "string",
							"format": "date-time"
						}
					},
					"additionalProperties": false
				},
				"order": {
					"description": "Transporter Order. Used for Transporters only",
					"type": "number"
				},
				"registered": {
					"description": "Indicates if the site is registered in RCRAInfo. Used for Transporters and Generators only.",
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"SiteType": {
			"type": "string",
			"enum": [
				"Tsdf",
				"Generator",
				"Transporter"
			]
		},
		"EpaSiteId": {
			"type": "string",
			"pattern": "^([A-Z][A-Z][A-Za-z0-9]{2,10})$"
		},
		"Phone": {
			"type": "object",
			"properties": {
				"number": {
					"type": "string",
					"pattern": "((\\(\\d{3}\\) ?)|(\\d{3}-))?\\d{3}-\\d{4}"
				},
				"extension": {
					"type": "string",
					"minLength": 0,
					"maxLength": 6,
					"pattern": "[0-9]"
				}
			},
			"required": [
				"number"
			],
			"additionalProperties": false
		},
		"Contact": {
			"type": "object",
			"properties": {
				"firstName": {
					"type": "string",
					"minLength": 1,
					"maxLength": 38
				},
				"middleInitial": {
					"type": "string",
					"minLength": 1,
					"maxLength": 1
				},
				"lastName": {
					"type": "string",
					"minLength": 1,
					"maxLength": 38
				},
				"phone": {
					"$ref": "#/definitions/Phone"
				},
				"email": {
					"type": "string",
					"pattern": "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$"
				},
				"companyName": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"Locality": {
			"description": "Used for passing and returning State and Country",
			"type": "object",
			"properties": {
				"code": {
					"type": "string",
					"minLength": 2,
					"maxLength": 2
				},
				"name": {
					"type": "string",
					"minLength": 1,
					"maxLength": 100
				}
			},
			"required": [
				"code"
			],
			"additionalProperties": false
		},
		"Address": {
			"type": "object",
			"properties": {
				"streetNumber": {
					"type": "string",
					"maxLength": 12
				},
				"address1": {
					"type": "string",
					"maxLength": 50
				},
				"address2": {
					"type": "string",
					"maxLength": 50
				},
				"city": {
					"type": "string",
					"maxLength": 25
				},
				"state": {
					"$ref": "#/definitions/Locality"
				},
				"country": {
					"$ref": "#/definitions/Locality"
				},
				"zip": {
					"type": "string",
					"pattern": "\\d{5}(?:[-\\s]\\d{4})?"
				}
			},
			"required": [
				"address1",
				"city",
				"state"
			],
			"additionalProperties": false
		},
		"CodeDescription": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"description": {
					"type": "string"
				}
			},
			"required": [
				"code"
			],
			"additionalProperties": false
		},
		"Code": {

			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				}
			},
			"required": [
				"code"
			],
			"additionalProperties": false
		}	
	}
}